framework = "NetworkExtension"
crate = "objc2-network-extension"
required-crates = ["objc2", "objc2-foundation"]
custom-lib-rs = true
macos = "10.10"
maccatalyst = "13.0"
ios = "8.0"
tvos = "17.0"
watchos = "7.0"
visionos = "1.0"

# error: translator assertion failure: (left `"NSString"`) (right `"const NSString"`)
static.kNEHotspotHelperOptionDisplayName.skipped = true
static.NEFilterProviderRemediationMapRemediationURLs.skipped = true
static.NEFilterProviderRemediationMapRemediationButtonTexts.skipped = true

# Needs Network framework
class.NEAppProxyFlow.methods."setMetadata:".skipped = true
class.NEAppProxyFlow.methods.networkInterface.skipped = true
class.NEAppProxyFlow.methods."setNetworkInterface:".skipped = true
class.NEAppProxyFlow.methods."openWithLocalFlowEndpoint:completionHandler:".skipped = true
class.NEAppProxyProvider.methods."handleNewUDPFlow:initialRemoteFlowEndpoint:".skipped = true
class.NEAppProxyTCPFlow.methods.remoteFlowEndpoint.skipped = true
typedef.NWEndpointArray.skipped = true
class.NEAppProxyUDPFlow.methods.localFlowEndpoint.skipped = true
class.NEAppProxyUDPFlow.methods."readDatagramsAndFlowEndpointsWithCompletionHandler:".skipped = true
class.NEAppProxyUDPFlow.methods."writeDatagrams:sentByFlowEndpoints:completionHandler:".skipped = true
class.NEDNSProxyProvider.methods."handleNewUDPFlow:initialRemoteFlowEndpoint:".skipped = true
typedef.NEFilterPacketHandler.skipped = true
class.NEFilterPacketProvider.methods.packetHandler.skipped = true
class.NEFilterPacketProvider.methods."setPacketHandler:".skipped = true
class.NEFilterSocketFlow.methods.remoteFlowEndpoint.skipped = true
class.NEFilterSocketFlow.methods.localFlowEndpoint.skipped = true
class.NEHotspotHelperCommand.methods.interface.skipped = true
class.NENetworkRule.methods."initWithDestinationNetworkEndpoint:prefix:protocol:".skipped = true
class.NENetworkRule.methods."initWithDestinationHostEndpoint:protocol:".skipped = true
class.NENetworkRule.methods."initWithRemoteNetworkEndpoint:remotePrefix:localNetworkEndpoint:localPrefix:protocol:direction:".skipped = true
class.NENetworkRule.methods.matchRemoteHostOrNetworkEndpoint.skipped = true
class.NENetworkRule.methods.matchLocalNetworkEndpoint.skipped = true
class.NEPacketTunnelProvider.methods.virtualInterface.skipped = true

# Needs `ASAccessory` from AccessorySetupKit
class.NEHotspotConfigurationManager.methods."joinAccessoryHotspot:passphrase:completionHandler:".skipped = true
class.NEHotspotConfigurationManager.methods."joinAccessoryHotspotWithoutSecurity:completionHandler:".skipped = true

# Wrongly renamed (Swift's renaming algorithm is insufficient)
enum.NEHotspotConfigurationEAPTLSVersion.skipped = true
enum.NEVPNIKEv2EncryptionAlgorithm.skipped = true
